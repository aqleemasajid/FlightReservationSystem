
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Aqleema
 */
public class reservation extends javax.swing.JFrame {
    int onlineStatus;
    Connection con;
    Statement sp;
    ResultSet rs;

    /**
     * Creates new form reservation
     */
    public reservation() {
        initComponents();
        try{
        establishConnection();
        }catch(Exception e){
            System.out.println(e);
        }
        setDdata();
        setAdata();
    }
    
    public reservation(loginPage l) {
        onlineStatus=l.onlineStatus;
        
        initComponents();
        try{
        establishConnection();
        }catch(Exception e){
            System.out.println(e);
        }
        setDdata();
        setAdata();
    }
    
     public reservation(Home1 r) {
        onlineStatus=r.onlineStatus;
        initComponents();
        try{
        establishConnection();
        }catch(Exception e){
            System.out.println(e);
        }
        setDdata();
        setAdata();
        setID();
    }
    
    
    
     public void establishConnection()
             throws ClassNotFoundException, SQLException
    {
        Class.forName("com.mysql.jdbc.Driver");
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/flight_management?zeroDateTimeBehavior=convertToNull", "root","");
        sp=(Statement) con.createStatement();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dCombo = new javax.swing.JComboBox();
        aCombo = new javax.swing.JComboBox();
        dateChooser = new com.toedter.calendar.JDateChooser();
        goBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        seatsCombo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        jLabel1.setText("Select Departure airport- city :");

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        jLabel2.setText("Select Arrival airport- city:");

        jLabel3.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        jLabel3.setText("Select Date:");

        goBtn.setText("Let's Go!");
        goBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        jLabel4.setText("Number of Seats:");

        seatsCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(goBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(dCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(aCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                        .addComponent(seatsCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(254, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addComponent(goBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBtnActionPerformed
        // TODO add your handling code here:
        
        try{
            int seats=0;
            String getuser= "select * from onlinestatus";
            sp=con.prepareStatement(getuser);
            rs=sp.executeQuery(getuser);
            rs.next();
            String username=rs.getNString("username");
            double d;
            Date dat= dateChooser.getDate();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
            String strDate = dateFormat.format(dat);
            String query= "Select * from flights where departure = " + "'" + (String) dCombo.getSelectedItem() + "'" + "and arrival =" + "'" + (String) aCombo.getSelectedItem() +"'" + "and date = " + "'" + strDate + "'" ;
            sp=con.prepareStatement(query);
            rs=sp.executeQuery(query);
            if(rs.next()){
                 d=rs.getDouble("numberOfSeats");
                if(d < Double.parseDouble((String)seatsCombo.getSelectedItem())){
                    JOptionPane.showMessageDialog(null, "This much seat(s) not available","Access denied", JOptionPane.ERROR_MESSAGE);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Congratulations you are going to " + aCombo.getSelectedItem()+ "with flight number =" + setID()+ "!"  ,"Access denied", JOptionPane.INFORMATION_MESSAGE);
                    
                    
                    String sql=" select * from reservedflights where id=" + "'" + setID() + "'" + "and username=" + "'" + username + "'";
                    sp=con.prepareStatement(sql);
                    rs=sp.executeQuery(sql);
                    if(!rs.next())
                    {
                            String que="insert into reservedflights (username,numberOfSeats,departure,arrival,date,id) values (" 
                     + "'" + username + "'" + "," + "'" + seatsCombo.getSelectedItem() + "'" + "," 
                     + "'" + dCombo.getSelectedItem() + "'" + "," + "'" + aCombo.getSelectedItem() + "'" + ","
                     + "'" + strDate + "'" + "," + "'" + setID() + "'" + ")";
                    sp=con.prepareStatement(que);
                    sp.executeUpdate(que);
                    }
                    else
                    {
                        
                           
                            seats= rs.getInt("numberOfSeats") + Integer.parseInt((String) seatsCombo.getSelectedItem());
                            System.out.println(seats);
                       
                        String u="update reservedflights set numberOfSeats= "+ "'" + seats + "'" + "where id=" + 
                        "'" + setID() + "'";
                        sp=con.prepareStatement(u);
                        sp.executeUpdate(u);
                    }
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                
                    
                }
             try{
                double r= d - Double.parseDouble((String)seatsCombo.getSelectedItem());
                String str= r + " ";
                String q="update flights set numberOfSeats= " + "'" + r + "'" + "where departure = " + "'" + (String) dCombo.getSelectedItem() + "'" + "and arrival =" + "'" + (String) aCombo.getSelectedItem() +"'" + "and date = " + "'" + strDate + "'" ;
                sp.executeUpdate(q);
            }catch(Exception e){
                System.out.println(" HIIIII" + e);
            }
             
             
            }
            else{
                JOptionPane.showMessageDialog(null, "Flights not available","Access denied", JOptionPane.ERROR_MESSAGE);
            }
        }catch(Exception e){
            System.out.println(e);
        }
        
        
        
    }//GEN-LAST:event_goBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reservation().setVisible(true);
            }
        });
    }
    
     public void setDdata()
    {
         try{
            String query="select * from flights";
            rs=sp.executeQuery(query);
            while(rs.next())
            {
                String departure=rs.getString("departure");
                
                System.out.println(departure);
                dCombo.addItem(departure);
            }
        }catch(Exception exp){
            System.out.println(exp);
        }
       
    }
    public void setAdata(){
        try{
            String query="select * from flights";
            rs=sp.executeQuery(query);
            while(rs.next())
            {
                String arrival=rs.getString("arrival");
                
                System.out.println(arrival);
                aCombo.addItem(arrival);
            }
        }catch(Exception exp){
            System.out.println(exp);
        }
      
    }
    public String setID(){
        String dd="";
        
        try{
         Date dat= dateChooser.getDate();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
            String strDate = dateFormat.format(dat);
            String query= "Select * from flights where departure = " + "'" + (String) dCombo.getSelectedItem() + "'" + "and arrival =" + "'" + (String) aCombo.getSelectedItem() +"'" + "and date = " + "'" + strDate + "'" ;
            sp=con.prepareStatement(query);
            rs=sp.executeQuery(query);
            rs.next();
            int d= rs.getInt("id");
            dd = Integer.toString(d);
         
            
        }catch(Exception e){
            System.out.println("kahan?" + e);
        }
        return dd;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox aCombo;
    private javax.swing.JComboBox dCombo;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton goBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox seatsCombo;
    // End of variables declaration//GEN-END:variables
}
